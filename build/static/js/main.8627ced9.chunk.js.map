{"version":3,"sources":["makeData.js","App.js","index.js"],"names":["range","len","arr","i","push","newPerson","statusChance","Math","random","firstName","namor","generate","words","numbers","lastName","age","floor","url","number","visits","progress","status","DefaultColumnFilter","_ref","_ref$column","column","filterValue","preFilteredRows","setFilter","count","length","react_default","a","createElement","value","onChange","e","target","undefined","placeholder","concat","fuzzyTextFilterFn","rows","id","matchSorter","keys","row","values","Table","_ref2","columns","data","fetchData","loading","controlledPageCount","pageCount","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","_useTable","useTable","initialState","pageIndex","manualPagination","useFilters","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","nextPage","previousPage","setPageSize","_useTable$state","state","pageSize","useEffect","_useState3","useState","_useState4","Object","slicedToArray","slider","setSlider","size","isClient","window","getSize","width","innerWidth","height","innerHeight","_useState","_useState2","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","Fragment","className","href","onClick","s","style","display","opacity","transform","transitionProperty","transitionDuration","map","headerGroup","assign","getHeaderGroupProps","headers","isSorted","isSortedDesc","getHeaderProps","getSortByToggleProps","render","canFilter","getRowProps","cells","cell","data-label","Header","getCellProps","colSpan","Number","key","preventDefault","autoRemove","val","serverData","_len","arguments","lens","Array","_key","makeDataLevel","depth","d","objectSpread","subRows","makeData","App","accessor","Filter","_React$useState","_React$useState2","setData","_React$useState3","_React$useState4","setLoading","_React$useState5","_React$useState6","setPageCount","fetchIdRef","useRef","useCallback","_ref3","fetchId","current","setTimeout","startRow","endRow","slice","ceil","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8627ced9.chunk.js","sourcesContent":["import namor from 'namor'\r\n\r\nconst range = len => {\r\n  const arr = []\r\n  for (let i = 0; i < len; i++) {\r\n    arr.push(i)\r\n  }\r\n  return arr\r\n}\r\n\r\nconst newPerson = () => {\r\n  const statusChance = Math.random()\r\n  return {\r\n    firstName: namor.generate({ words: 1, numbers: 0 }),\r\n    lastName: namor.generate({ words: 1, numbers: 0 }),\r\n    age: Math.floor(Math.random() * 30),\r\n    url: namor.generate({url:1, number:0}),\r\n    visits: Math.floor(Math.random() * 100),\r\n    progress: Math.floor(Math.random() * 100),\r\n    status:\r\n      statusChance > 0.66\r\n        ? 'relationship'\r\n        : statusChance > 0.33\r\n        ? 'complicated'\r\n        : 'single',\r\n  }\r\n}\r\n\r\nexport default function makeData(...lens) {\r\n  const makeDataLevel = (depth = 0) => {\r\n    const len = lens[depth]\r\n    return range(len).map(d => {\r\n      return {\r\n        ...newPerson(),\r\n        subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\r\n      }\r\n    })\r\n  }\r\n\r\n  return makeDataLevel()\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useTable, useFilters, useGlobalFilter, useSortBy, usePagination} from 'react-table'\r\nimport matchSorter from 'match-sorter'\r\nimport makeData from './makeData'\r\nimport M from \"materialize-css\";\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport './App.css'\r\n\r\nfunction useWindowSize() {\r\n  const isClient = typeof window === \"object\";\r\n\r\n  function getSize() {\r\n    return {\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined\r\n    };\r\n  }\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false;\r\n    }\r\n\r\n    function handleResize() {\r\n      setWindowSize(getSize());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return windowSize;\r\n}\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n    />\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\n// Our table component\r\nfunction Table({ \r\n  columns, \r\n  data, \r\n  fetchData,\r\n  loading,\r\n  pageCount: controlledPageCount, \r\n}) {\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    pageOptions,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      filterTypes,\r\n      initialState: { pageIndex: 0 },\r\n      manualPagination: true,\r\n      pageCount: controlledPageCount,\r\n    },\r\n    useFilters, // useFilters!\r\n    useGlobalFilter, // useGlobalFilter!\r\n    useSortBy, // userSortBy!\r\n    usePagination, //userPagination!\r\n  )\r\n  // Listen for changes in pagination and use the state to fetch our new data\r\n  useEffect(() => {\r\n    fetchData({ pageIndex, pageSize })\r\n  }, [fetchData, pageIndex, pageSize])\r\n  // console.log(headerGroup.headers)\r\n  const [slider, setSlider] = useState(false);\r\n  const size = useWindowSize();\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <nav className=\"light-blue\">\r\n          <a\r\n            href=\"#\"\r\n            className=\"sidenav-trigger\"\r\n            onClick={() => setSlider(s => !s)}\r\n          >\r\n            <i className=\"material-icons\">menu</i>\r\n          </a>\r\n        </nav>\r\n        <div \r\n          className=\"sidenav-overlay\" \r\n          onClick={() => setSlider(s => !s)}\r\n          style={{\r\n            display: slider && size.width < 835 ? \"block\" : \"none\",\r\n            opacity: \"1\"\r\n          }}/>\r\n        <div \r\n          className=\"mobile-header sidenav\" \r\n          style={{\r\n          transform: slider || size.width > 835 ? \"translateX(0%)\" : \"\",\r\n          transitionProperty: \"transform\",\r\n          transitionDuration: \".25s\"\r\n        }}>\r\n          {headerGroups.map(headerGroup => (\r\n            <div className=\"sort-header\" {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <div\r\n                  className=\r\n                  {column.isSorted\r\n                    ? column.isSortedDesc\r\n                      ? \"sorting_desc\"\r\n                      : \"sorting_asc\"\r\n                    : \"sorting\"\r\n                  } \r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                >\r\n                  {column.render('Header')}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n          {headerGroups.map(headerGroup => (\r\n            <div className=\"filter-header\" {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"col s12\">\r\n          <div className=\"material-table card\">\r\n            <div className=\"dataTables_wrapper no-footer\">\r\n              \r\n              <table className=\"dataTable no-footer\" {...getTableProps()}>\r\n                <thead>\r\n                  {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                      {headerGroup.headers.map(column => (\r\n                        <th \r\n                          className=\r\n                          {column.isSorted\r\n                            ? column.isSortedDesc\r\n                              ? \"sorting_desc\"\r\n                              : \"sorting_asc\"\r\n                            : \"sorting\"\r\n                          }\r\n                        >\r\n                          <div className=\"headername\"\r\n                          {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                            {column.render('Header')}\r\n                          </div>\r\n                          <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                        </th>\r\n                      ))}\r\n                    </tr>\r\n                  ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                  {page.map((row, i) => {\r\n                    prepareRow(row)\r\n                    return (\r\n                      <tr {...row.getRowProps()}>\r\n                        {row.cells.map(cell => {\r\n                          return <td data-label={cell.column.Header} {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                        })}\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                  <tr>\r\n                    {loading ? (\r\n                      // Use our custom loading state to show a loading indicator\r\n                      <td colSpan=\"10000\">Loading...</td>\r\n                    ) : (\r\n                        <td colSpan=\"10000\">\r\n                          Showing {page.length} of {controlledPageCount * pageSize}{' '}\r\n                        results\r\n                        </td>\r\n                      )}\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <br />\r\n              <div className=\"table-footer\">\r\n                <div className=\"dataTables_length\">            \r\n                  <label>\r\n                    <span>Rows per page:</span>\r\n                    <select\r\n                      className=\"browser-default\"\r\n                      value={pageSize}\r\n                      onChange={e => {\r\n                        setPageSize(Number(e.target.value))\r\n                      }}\r\n                    >\r\n                      {[10, 20, 30, 40, 50].map(pageSize => (\r\n                        <option key={pageSize} value={pageSize}>\r\n                          {pageSize}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n                \r\n                <div className=\"dataTables_info\">\r\n                  Page {pageIndex + 1} of {pageOptions.length}\r\n                </div>\r\n\r\n                <div className=\"dataTables_paginate paging_simple_numbers\">\r\n                  <ul className=\"material-pagination\">\r\n                    <li className=\"paginate_button previous\">\r\n                      <a\r\n                        onClick={(e) => {e.preventDefault(); previousPage();}} \r\n                      >\r\n                        <i className=\"material-icons\">chevron_left</i>\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"paginate_button next\">\r\n                      <a \r\n                        onClick={(e) => {e.preventDefault(); nextPage();}}\r\n                      >\r\n                        <i className=\"material-icons\">chevron_right</i>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction filterGreaterThan(rows, id, filterValue) {\r\n  return rows.filter(row => {\r\n    const rowValue = row.values[id]\r\n    return rowValue >= filterValue\r\n  })\r\n}\r\nfilterGreaterThan.autoRemove = val => typeof val !== 'number'\r\nconst serverData = makeData(10000)\r\n\r\nfunction App() {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'FirstName',\r\n        accessor: 'firstName',\r\n        Filter: DefaultColumnFilter,\r\n        filter: 'equals',\r\n      },\r\n      {\r\n        Header: 'LastName',\r\n        accessor: 'lastName',\r\n        Filter: DefaultColumnFilter,\r\n        filter: 'equals',\r\n      },\r\n      {\r\n        Header: 'URL',\r\n        accessor: 'url',\r\n        Filter: DefaultColumnFilter,\r\n        filter: 'equals',\r\n      },\r\n      {\r\n        Header: 'Age',\r\n        accessor: 'age',\r\n        Filter: DefaultColumnFilter,\r\n        filter: 'equals',\r\n      },\r\n      {\r\n        Header: 'Visits',\r\n        accessor: 'visits',\r\n        Filter: DefaultColumnFilter,\r\n        filter: 'equals',\r\n      },\r\n      {\r\n        Header: 'Status',\r\n        accessor: 'status',\r\n        Filter: DefaultColumnFilter,\r\n        filter: 'includes',\r\n      },\r\n      {\r\n        Header: 'Profile Progress',\r\n        accessor: 'progress',\r\n        Filter: DefaultColumnFilter,\r\n        filter: 'equals',\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  // We'll start our table without any data\r\n  const [data, setData] = React.useState([])\r\n  const [loading, setLoading] = React.useState(false)\r\n  const [pageCount, setPageCount] = React.useState(0)\r\n  const fetchIdRef = React.useRef(0)\r\n\r\n  const fetchData = React.useCallback(({ pageSize, pageIndex }) => {\r\n    const fetchId = ++fetchIdRef.current\r\n    setLoading(true)\r\n    setTimeout(() => {\r\n      // Only update the data if this is the latest fetch\r\n      if (fetchId === fetchIdRef.current) {\r\n        const startRow = pageSize * pageIndex\r\n        const endRow = startRow + pageSize\r\n        setData(serverData.slice(startRow, endRow))\r\n        setPageCount(Math.ceil(serverData.length / pageSize))\r\n        setLoading(false)\r\n      }\r\n    }, 1000)\r\n  }, [])\r\n\r\n  return (\r\n      <Table \r\n        columns={columns} \r\n        data={data}\r\n        fetchData={fetchData}\r\n        loading={loading}\r\n        pageCount={pageCount} \r\n      />\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}